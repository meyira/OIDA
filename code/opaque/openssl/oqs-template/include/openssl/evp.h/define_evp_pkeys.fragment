{% set count = namespace(val=0) %}
{%- for sig in config['sigs'] %}
    {%- for variant in sig['variants'] %}
# define EVP_PKEY_{{ variant['name']|upper }} NID_{{ variant['name'] }}
{%- set count.val = count.val + 1 -%}
        {%- for classical_alg in variant['mix_with'] %}
# define EVP_PKEY_{{ classical_alg['name']|upper }}_{{ variant['name']|upper }} NID_{{ classical_alg['name'] }}_{{ variant['name'] }}
{%- set count.val = count.val + 1 -%}
        {%- endfor %}
    {%- endfor %}
{%- endfor %}
#define OQS_OPENSSL_SIG_algs_length {{ count.val }}
#define OQS_OPENSSL_KEM_algs_length {{ config['kems']|length }}
{%- set last_kem_hybrid_level = (config['kems']|last)['bit_security'] -%}
{%- if last_kem_hybrid_level == 128 -%}
   {%- set hybrid_curve = "p256_" -%}
{%- elif last_kem_hybrid_level == 192 -%}
   {%- set hybrid_curve = "p384_" -%}
{%- elif last_kem_hybrid_level == 256 -%}
   {%- set hybrid_curve = "p521_" -%}
{%- else -%}
   {%- set hybrid_curve = "" -%}
{%- endif %}
#define IS_OQS_OPENSSL_KEM_NID(a) ((a >= 0x01FF) && (a <= NID_{{ hybrid_curve }}{{ (config['kems'] | last)['name_group'] }}))
{%- set first_sig_variant = (config['sigs']|first)['variants']|first %}
{%- set last_sig_variant = (config['sigs']|last)['variants']|last %}
#define IS_OQS_OPENSSL_SIG_NID(a) ((a >= NID_{{ first_sig_variant['name'] }}) && (a <= NID_{{ (last_sig_variant['mix_with']|last)['name'] }}_{{ last_sig_variant['name'] }}))
//
